:PROPERTIES:
:ID:       e66c5ded-28d1-46f1-872c-522e3f15c0af
:END:
#+title: Query Problem
#+filetags: :moc: 
#+hugo_base_dir: /home/phihungnguyen/quartz/ 
#+hugo_section: notes
#+date: [2024-02-26 Mon]
#+hugo_lastmod: [2024-02-26 Mon]
*Link*:  

The computational model is usually built as
* Here
input -> computation -> output
For query model, the input is not provided to the computation.
The input is a function that the computation acceses by making queries.
(random access to the input)

input
computation ---> output

Since the input is hidden (oracle/blackbox), only by asking the information of
the input could be revealed.

For a funcion $f: \sum^n-> \sum^m$.
When the query $x\in \sum^n$ is made by a computation, a value $f(x) \in \sum^m$
is made available.

Efficiency of query algorithms: the number of queries made.

Examples:

** OR
$f: \sum^n -> \sum$

Output 1 if there exists string $x\in\sum^n$ for which $f(x)=1$
Output 0 if there is no string like that/

** Parity
$f: \sum^n -> \sum$
The goal is to determine if it is even or odd
0 if the set $\{x \in \sum^n: f(x)=1\}$ has an even number of elements
1 otherwise

** Minimum
$f: \sum^n -> \sum^m$
compute the minimum of the intergers


Sometimes, we also have a promise on the input (some types of guarantee)
For example

unique Search:
we guarante that there is only one for which $f(x)=1$




